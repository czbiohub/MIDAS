# -*- mode: Snakemake -*-
#
# Build customer MIDAS database.
#
# Chunyu Zhao 2019-06-26

import os, subprocess, sys, shutil, gzip
from pathlib import Path
from midas import utility
import Bio.SeqIO
from collections import defaultdict


project_dir = Path("/mnt/chunyu20TB/midas-iggdb/IGGdb/v2.0.0")
toc_fp = str(project_dir/"genomes2species.tab")

mapfile_fp = str(project_dir/"mapfile")

temp_path = Path(str(project_dir/"temp"))
repgenome_path = Path(str(project_dir/"clean_set"))
prokka_dir = Path(str(project_dir/"prokka"))
species_dir = Path(str(project_dir/"species"))


GENOMES = {}
SPECIES = defaultdict(list)
Gpath = {}
with open(toc_fp) as f:
    next(f)
    for line in f:
        genome_id = line.rstrip('\n').split('\t')[1]
        species_id = line.rstrip('\n').split('\t')[-1]
        GENOMES[genome_id] = str(species_id)
        SPECIES[species_id].append(str(genome_id))
        Gpath[genome_id] = "%s/clean_set/%s" % (str(project_dir), str(species_id))

with open(mapfile_fp, "w") as out:
    out.write('\t'.join(["genome_id", "species_id", "rep_genome"]) + '\n')
    for genome in GENOMES.keys():
        if GENOMES[genome] == genome:
            line = [genome, GENOMES[genome], 1]
        else:
            line = [genome, GENOMES[genome], 0]
        out.write('\t'.join(map(str, line)) + '\n')

"""
Gene annotation
"""
rule species_map_genome:
    input:
        str(repgenome_path/"{species}"/"{species}.fna.lz4")
    output:
        str(temp_path/"genomes"/"{species}.fna.lz4")
    params:
        src = str(repgenome_path/"{species}"),
        dst = str(temp_path/"genomes")
    run:
        genomes = SPECIES[wildcards['species']]
        src = params['src']
        dst = params['dst']
        for genome in genomes:
            f = "%s/%s.fna.lz4" % (src, genome)
            t = "%s/%s.fna.lz4" % (dst, genome)
            shutil.copyfile(f, t)

rule _all_temp:
    input:
        expand(str(temp_path/genomes/"{species}.fna.lz4"), species = list(SPECIES.keys()))
